name: $(Build.SourceBranch)

trigger:
  branches:
   include:
   - release/*
  tags:
   include:
   - v*

parameters:
  - name: azcrconnectionparam
    displayName: Docker connection
    type: string
    default: onekeyprodregistry.azurecr.io-onekey-sdk-web-lib

variables:
  azcrconnection: ${{ parameters.azcrconnectionparam }}
  cdnUrl: $(cdn.url)

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BuildNumberGenerator
    displayName: Build Version Tag
    jobs:
    - job: GenerateReleaseVersionTag
      condition: or(startsWith(variables['build.sourceBranch'], 'refs/heads/development'), startsWith(variables['build.sourceBranch'], 'refs/heads/release/'))
      variables:
        revision: $[counter(variables['build.sourcebranchname'], 0)]
      steps:
      - bash: echo '##vso[build.updatebuildnumber]r$(build.sourcebranchname)-$(revision)'

    - job: GenerateMasterVersionTag
      condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
      variables:
        revision: $[counter(variables['build.sourceBranch'], 0)]
      steps:
      - bash: echo '##vso[build.updatebuildnumber]$(build.sourcebranchname)-$(revision)'

  - stage: BuildSteps
    jobs:
    - job: Build
      condition: or(startsWith(variables['build.sourceBranch'], 'refs/heads/development'), startsWith(variables['build.sourceBranch'], 'refs/heads/release/'), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
      steps:

      - checkout: self
        path: s/onekey-sdk-web-lib
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
      - task: YarnInstaller@3
        inputs:
          versionSpec: '1.x'

      - task: Yarn@3
        displayName: 'Install dependencies example react'
        inputs:
          projectDirectory: '$(pipeline.workspace)/s/onekey-sdk-web-lib/examples/web/react'
          arguments: 'install'

      - task: Yarn@3
        displayName: 'Build Example React'
        inputs:
          projectDirectory: '$(pipeline.workspace)/s/onekey-sdk-web-lib/examples/web/react'
          arguments: 'build'

      - task: Yarn@3
        displayName: 'Install dependencies example angular'
        condition: eq(startsWith(variables['build.sourceBranch'], 'refs/heads/development'), False)
        inputs:
          projectDirectory: '$(pipeline.workspace)/s/onekey-sdk-web-lib/examples/web/angular'
          arguments: 'install'

      - task: Yarn@3
        displayName: 'Build Example Angular'
        condition: eq(startsWith(variables['build.sourceBranch'], 'refs/heads/development'), False)
        inputs:
          projectDirectory: '$(pipeline.workspace)/s/onekey-sdk-web-lib/examples/web/angular'
          arguments: 'build'
          
      - task: Bash@3
        displayName: 'Build Example Angular Dev'
        condition: eq(startsWith(variables['build.sourceBranch'], 'refs/heads/development'), True)
        inputs:
          targetType: 'filePath'
          filePath: '$(pipeline.workspace)/s/onekey-sdk-web-lib/scripts/e2e-build-example.sh'
      
      - task: RegExMatchReplace@2
        inputs:
          PathToFile: 'examples/web/cdn/index.html'
          RegEx: '<script src="\.'
          ValueToReplace: "<script src=\"$(cdnUrl)"
          Global: true

      - task: RegExMatchReplace@2
        inputs:
          PathToFile: 'examples/web/cdn/index.html'
          RegEx: '<a href="/search'
          ValueToReplace: '<a href="./sample/search'
          Global: true

      - task: RegExMatchReplace@2
        inputs:
          PathToFile: 'examples/web/cdn/search.html'
          RegEx: '<script src="\.'
          ValueToReplace: "<script src=\"$(cdnUrl)"
          Global: true

      - task: RegExMatchReplace@2
        inputs:
          PathToFile: 'examples/web/react/build/index.html'
          RegEx: '<script id="devtool" src="/sample/react'
          ValueToReplace: "<script src=\"$(cdnUrl)"
          Global: true

      - task: RegExMatchReplace@2
        inputs:
          PathToFile: 'examples/web/angular/build/index.html'
          RegEx: '<script src="\./assets'
          ValueToReplace: "<script src=\"$(cdnUrl)"
          Global: true

      - task: Docker@2
        displayName: Docker login
        inputs:
          command: login
          containerRegistry: $(azcrconnection)

      - task: Docker@2
        displayName: Build image
        inputs:
          containerRegistry: $(azcrconnection)
          repository: $(Build.Repository.Name)
          command: 'buildAndPush'
          Dockerfile: 'devops/Dockerfile.app'
          tags: $(build.buildnumber)
          buildContext: '.'

      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'manifests'
          path: 'devops'
